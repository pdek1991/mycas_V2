# --- Stage 1: Build dependencies and obfuscate Python code ---
FROM python:3.10-slim AS builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Set working directory
WORKDIR /mycas/CLIENT

# Install system dependencies for virtualenv
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc libffi-dev musl-dev \
    && rm -rf /var/lib/apt/lists/*

# Install dependencies in a virtual environment
COPY requirements.txt .
RUN python -m venv /opt/venv \
    && /opt/venv/bin/pip install --no-cache-dir --upgrade pip setuptools wheel \
    && /opt/venv/bin/pip install --no-cache-dir -r requirements.txt

# Install PyArmor for obfuscation
RUN /opt/venv/bin/pip install --no-cache-dir pyarmor

# Copy application files
COPY . .

# Ensure the output directory exists before obfuscation
RUN mkdir -p /mycas/CLIENT/dist

# Obfuscate Python code
RUN /opt/venv/bin/pyarmor gen -O /mycas/CLIENT/dist stb_client.py

# --- Stage 2: Create a minimal runtime image ---
FROM python:3.10-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /mycas/CLIENT


# Copy only the virtual environment from the builder stage
COPY --from=builder /opt/venv /opt/venv

# Copy only the obfuscated Python files (not the original source code)
COPY --from=builder /mycas/CLIENT/dist /mycas/CLIENT/

# Set appropriate permissions
RUN chmod +x /mycas/CLIENT/stb_client.py || true

# Create a non-root user for security
RUN groupadd --system mycas && useradd --system --gid mycas mycas
USER mycas

# Use ENTRYPOINT for better flexibility
ENTRYPOINT ["python", "/mycas/CLIENT/stb_client.py"]
